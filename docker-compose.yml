version: '3.8'

services:
  app:
    build: .
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    depends_on:
      - db
      - migrate
      - redis
    volumes:
      - ./storage:/app/storage
    restart: unless-stopped
    networks:
      - app-network

  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    image: migrate/migrate
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./database/migration:/migrations
    command:
      - "-path=/migrations"
      - "-database"
      - "postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}?sslmode=disable"
      - "up"
    restart: no

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - app-network
    command: redis-server --appendonly yes

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge